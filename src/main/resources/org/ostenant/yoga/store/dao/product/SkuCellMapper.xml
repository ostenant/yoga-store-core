<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.ostenant.yoga.store.core.dao.product.SkuCellMapper">
	<resultMap id="BaseResultMap" type="org.ostenant.yoga.store.core.bean.product.SkuCell">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="product_id" property="productId" jdbcType="INTEGER" />
		<result column="color_id" property="colorId" jdbcType="INTEGER" />
		<result column="size" property="size" jdbcType="VARCHAR" />
		<result column="delive_fee" property="deliveFee" jdbcType="DOUBLE" />
		<result column="sku_price" property="skuPrice" jdbcType="DOUBLE" />
		<result column="stock_inventory" property="stockInventory"
			jdbcType="INTEGER" />
		<result column="sku_upper_limit" property="skuUpperLimit"
			jdbcType="INTEGER" />
		<result column="location" property="location" jdbcType="VARCHAR" />
		<result column="sku_img" property="skuImg" jdbcType="VARCHAR" />
		<result column="sku_sort" property="skuSort" jdbcType="INTEGER" />
		<result column="sku_name" property="skuName" jdbcType="VARCHAR" />
		<result column="market_price" property="marketPrice" jdbcType="DOUBLE" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="create_user_id" property="createUserId"
			jdbcType="VARCHAR" />
		<result column="update_user_id" property="updateUserId"
			jdbcType="VARCHAR" />
		<result column="last_status" property="lastStatus" jdbcType="INTEGER" />
		<result column="sku_type" property="skuType" jdbcType="INTEGER" />
		<result column="sales" property="sales" jdbcType="INTEGER" />
	</resultMap>


	<resultMap id="ImprovedResultMap" type="SkuCellResponse"
		extends="BaseResultMap">
		<result column="color" property="color" jdbcType="VARCHAR" />
		<result column="no" property="no" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="TableName">
		bbs_sku
	</sql>

	<sql id="Base_Column_List">
		id, product_id, color_id, size, delive_fee, sku_price, stock_inventory,
		sku_upper_limit,
		location, sku_img, sku_sort, sku_name, market_price, create_time, update_time,
		create_user_id,
		update_user_id, last_status, sku_type, sales
	</sql>


	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from
		<include refid="TableName" />
		where id = #{id,jdbcType=INTEGER}
	</select>


	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		<include refid="TableName" />
		where id = #{id,jdbcType=INTEGER}
	</delete>


	<insert id="insert" parameterType="org.ostenant.yoga.store.core.bean.product.SkuCell">
		insert into
		<include refid="TableName" />
		(id, product_id, color_id,
		size, delive_fee, sku_price,
		stock_inventory, sku_upper_limit, location,
		sku_img, sku_sort, sku_name,
		market_price, create_time, update_time,
		create_user_id, update_user_id, last_status,
		sku_type, sales)
		values (#{id,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER},
		#{colorId,jdbcType=INTEGER},
		#{size,jdbcType=VARCHAR}, #{deliveFee,jdbcType=DOUBLE}, #{skuPrice,jdbcType=DOUBLE},
		#{stockInventory,jdbcType=INTEGER}, #{skuUpperLimit,jdbcType=INTEGER},
		#{location,jdbcType=VARCHAR},
		#{skuImg,jdbcType=VARCHAR}, #{skuSort,jdbcType=INTEGER}, #{skuName,jdbcType=VARCHAR},
		#{marketPrice,jdbcType=DOUBLE}, #{createTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP},
		#{createUserId,jdbcType=VARCHAR}, #{updateUserId,jdbcType=VARCHAR}, #{lastStatus,jdbcType=INTEGER},
		#{skuType,jdbcType=INTEGER}, #{sales,jdbcType=INTEGER})
	</insert>


	<insert id="insertSelective" parameterType="org.ostenant.yoga.store.core.bean.product.SkuCell">
		insert into
		<include refid="TableName" />
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="productId != null">
				product_id,
			</if>
			<if test="colorId != null">
				color_id,
			</if>
			<if test="size != null">
				size,
			</if>
			<if test="deliveFee != null">
				delive_fee,
			</if>
			<if test="skuPrice != null">
				sku_price,
			</if>
			<if test="stockInventory != null">
				stock_inventory,
			</if>
			<if test="skuUpperLimit != null">
				sku_upper_limit,
			</if>
			<if test="location != null">
				location,
			</if>
			<if test="skuImg != null">
				sku_img,
			</if>
			<if test="skuSort != null">
				sku_sort,
			</if>
			<if test="skuName != null">
				sku_name,
			</if>
			<if test="marketPrice != null">
				market_price,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="createUserId != null">
				create_user_id,
			</if>
			<if test="updateUserId != null">
				update_user_id,
			</if>
			<if test="lastStatus != null">
				last_status,
			</if>
			<if test="skuType != null">
				sku_type,
			</if>
			<if test="sales != null">
				sales,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="productId != null">
				#{productId,jdbcType=INTEGER},
			</if>
			<if test="colorId != null">
				#{colorId,jdbcType=INTEGER},
			</if>
			<if test="size != null">
				#{size,jdbcType=VARCHAR},
			</if>
			<if test="deliveFee != null">
				#{deliveFee,jdbcType=DOUBLE},
			</if>
			<if test="skuPrice != null">
				#{skuPrice,jdbcType=DOUBLE},
			</if>
			<if test="stockInventory != null">
				#{stockInventory,jdbcType=INTEGER},
			</if>
			<if test="skuUpperLimit != null">
				#{skuUpperLimit,jdbcType=INTEGER},
			</if>
			<if test="location != null">
				#{location,jdbcType=VARCHAR},
			</if>
			<if test="skuImg != null">
				#{skuImg,jdbcType=VARCHAR},
			</if>
			<if test="skuSort != null">
				#{skuSort,jdbcType=INTEGER},
			</if>
			<if test="skuName != null">
				#{skuName,jdbcType=VARCHAR},
			</if>
			<if test="marketPrice != null">
				#{marketPrice,jdbcType=DOUBLE},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUserId != null">
				#{createUserId,jdbcType=VARCHAR},
			</if>
			<if test="updateUserId != null">
				#{updateUserId,jdbcType=VARCHAR},
			</if>
			<if test="lastStatus != null">
				#{lastStatus,jdbcType=INTEGER},
			</if>
			<if test="skuType != null">
				#{skuType,jdbcType=INTEGER},
			</if>
			<if test="sales != null">
				#{sales,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>


	<update id="updateByPrimaryKeySelective" parameterType="org.ostenant.yoga.store.core.bean.product.SkuCell">
		update
		<include refid="TableName" />
		<set>
			<if test="productId != null">
				product_id = #{productId,jdbcType=INTEGER},
			</if>
			<if test="colorId != null">
				color_id = #{colorId,jdbcType=INTEGER},
			</if>
			<if test="size != null">
				size = #{size,jdbcType=VARCHAR},
			</if>
			<if test="deliveFee != null">
				delive_fee = #{deliveFee,jdbcType=DOUBLE},
			</if>
			<if test="skuPrice != null">
				sku_price = #{skuPrice,jdbcType=DOUBLE},
			</if>
			<if test="stockInventory != null">
				stock_inventory = #{stockInventory,jdbcType=INTEGER},
			</if>
			<if test="skuUpperLimit != null">
				sku_upper_limit = #{skuUpperLimit,jdbcType=INTEGER},
			</if>
			<if test="location != null">
				location = #{location,jdbcType=VARCHAR},
			</if>
			<if test="skuImg != null">
				sku_img = #{skuImg,jdbcType=VARCHAR},
			</if>
			<if test="skuSort != null">
				sku_sort = #{skuSort,jdbcType=INTEGER},
			</if>
			<if test="skuName != null">
				sku_name = #{skuName,jdbcType=VARCHAR},
			</if>
			<if test="marketPrice != null">
				market_price = #{marketPrice,jdbcType=DOUBLE},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUserId != null">
				create_user_id = #{createUserId,jdbcType=VARCHAR},
			</if>
			<if test="updateUserId != null">
				update_user_id = #{updateUserId,jdbcType=VARCHAR},
			</if>
			<if test="lastStatus != null">
				last_status = #{lastStatus,jdbcType=INTEGER},
			</if>
			<if test="skuType != null">
				sku_type = #{skuType,jdbcType=INTEGER},
			</if>
			<if test="sales != null">
				sales = #{sales,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>


	<update id="updateByPrimaryKey" parameterType="org.ostenant.yoga.store.core.bean.product.SkuCell">
		update
		<include refid="TableName" />
		set product_id = #{productId,jdbcType=INTEGER},
		color_id = #{colorId,jdbcType=INTEGER},
		size = #{size,jdbcType=VARCHAR},
		delive_fee = #{deliveFee,jdbcType=DOUBLE},
		sku_price = #{skuPrice,jdbcType=DOUBLE},
		stock_inventory = #{stockInventory,jdbcType=INTEGER},
		sku_upper_limit = #{skuUpperLimit,jdbcType=INTEGER},
		location = #{location,jdbcType=VARCHAR},
		sku_img = #{skuImg,jdbcType=VARCHAR},
		sku_sort = #{skuSort,jdbcType=INTEGER},
		sku_name = #{skuName,jdbcType=VARCHAR},
		market_price = #{marketPrice,jdbcType=DOUBLE},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		update_time = #{updateTime,jdbcType=TIMESTAMP},
		create_user_id = #{createUserId,jdbcType=VARCHAR},
		update_user_id = #{updateUserId,jdbcType=VARCHAR},
		last_status = #{lastStatus,jdbcType=INTEGER},
		sku_type = #{skuType,jdbcType=INTEGER},
		sales = #{sales,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- 点击库存查询最小销售单元列表 -->
	<select id="getSkuListByProductId" parameterType="java.util.HashMap"
		resultMap="ImprovedResultMap">
		select
		p.no,
		s.id,
		s.product_id,
		s.size,
		s.delive_fee,
		s.sku_price,
		s.stock_inventory,
		s.sku_upper_limit,
		s.sku_name,
		s.market_price,
		s.sku_type,
		c.name as color
		from
		<include refid="TableName" />
		as s
		left join bbs_product as p
		on (s.product_id = p.id)
		left join bbs_color as c
		on (s.color_id = c.id)
		<where>
			product_id = #{productId,jdbcType=INTEGER}
		</where>
		<if test="startRow >= 0 and pageSize > 0">
			limit #{startRow},#{pageSize}
		</if>
	</select>
	
	<!-- 点击库存查询最小销售单元列表 -->
	<select id="getSkuListByPidWithoutPage" parameterType="int"
		resultMap="ImprovedResultMap">
		select
		p.no,
		s.id,
		s.product_id,
		s.size,
		s.delive_fee,
		s.sku_price,
		s.stock_inventory,
		s.sku_upper_limit,
		s.sku_name,
		s.market_price,
		s.sku_type,
		s.color_id,
		c.name as color
		from
		<include refid="TableName" />
		as s
		left join bbs_product as p
		on (s.product_id = p.id)
		left join bbs_color as c
		on (s.color_id = c.id)
		<where>
			product_id = #{productId,jdbcType=INTEGER}
		</where>
	</select>

	<!-- 根据商品id获取最小销售单元总数 -->
	<select id="getTotalCountByProductId" parameterType="int"
		resultType="int">
		select count(1)
		from
		<include refid="TableName" />
		<where>
			product_id = #{productId,jdbcType=INTEGER}
		</where>
	</select>


	<delete id="deleteByProductId" parameterType="int">
		delete from 
		<include refid="TableName" />
		where product_id = #{productId}
	</delete>

</mapper>

